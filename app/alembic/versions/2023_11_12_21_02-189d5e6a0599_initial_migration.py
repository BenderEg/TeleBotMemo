"""initial migration

Revision ID: 189d5e6a0599
Revises:
Create Date: 2023-11-12 21:02:21.441005

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import expression


# revision identifiers, used by Alembic.
revision: str = "189d5e6a0599"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(expression.text('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'))
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "creation_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="memo",
    )
    op.create_table(
        "bank",
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("object", sa.String(), nullable=False),
        sa.Column("meaning", sa.String(), nullable=False),
        sa.Column(
            "creation_date",
            sa.DateTime(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column(
            "next_date",
            sa.DateTime(),
            server_default=sa.text("CURRENT_DATE+1"),
            nullable=False,
        ),
        sa.Column("interval", sa.Float(), server_default="1", nullable=False),
        sa.Column("n", sa.Integer(), server_default="1", nullable=False),
        sa.Column(
            "e_factor", sa.Float(), server_default="2.5", nullable=False
        ),
        sa.Column("category", sa.String(), nullable=False),
        sa.Column(
            "modified",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["memo.users.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id", "object", "category", name="user_id_object_idx"
        ),
        schema="memo",
    )
    op.create_table(
        "categories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "creation_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["memo.users.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "name", name="user_id_category_idx"),
        schema="memo",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("categories", schema="memo")
    op.drop_table("bank", schema="memo")
    op.drop_table("users", schema="memo")
    # ### end Alembic commands ###
