"""date format

Revision ID: a40f79cb30cf
Revises: 189d5e6a0599
Create Date: 2023-11-13 14:17:16.225697

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a40f79cb30cf"
down_revision: Union[str, None] = "189d5e6a0599"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "bank",
        "creation_date",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_DATE"),
    )
    op.alter_column(
        "bank",
        "next_date",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text("(CURRENT_DATE + 1)"),
    )
    op.drop_constraint("bank_user_id_fkey", "bank", type_="foreignkey")
    op.create_foreign_key(
        None,
        "bank",
        "users",
        ["user_id"],
        ["id"],
        source_schema="memo",
        referent_schema="memo",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "categories_user_id_fkey", "categories", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "categories",
        "users",
        ["user_id"],
        ["id"],
        source_schema="memo",
        referent_schema="memo",
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "categories", schema="memo", type_="foreignkey")
    op.create_foreign_key(
        "categories_user_id_fkey",
        "categories",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "bank", schema="memo", type_="foreignkey")
    op.create_foreign_key(
        "bank_user_id_fkey",
        "bank",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.alter_column(
        "bank",
        "next_date",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("(CURRENT_DATE + 1)"),
    )
    op.alter_column(
        "bank",
        "creation_date",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_DATE"),
    )
    # ### end Alembic commands ###
